apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: blast-{{ .Values.labels.name }}-{{ .Values.labels.shortRegion }}
  labels:
    app.kubernetes.io/instance: blast-{{ .Values.labels.name }}-{{ .Values.labels.shortRegion }}
    app.kubernetes.io/name: blast-{{ .Values.labels.name }}-{{ .Values.labels.shortRegion }}
    app.kubernetes.io/part-of: blast
    app.kubernetes.io/version: {{ .Values.image.tag }}
    {{- if .Values.labels }}
{{ toYaml .Values.labels | indent 4 }}
    {{- end }}
spec:
  serviceName: blast-{{ .Values.labels.name }}-{{ .Values.labels.shortRegion }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: blast-{{ .Values.labels.name }}-{{ .Values.labels.shortRegion }}
      app.kubernetes.io/name: blast-{{ .Values.labels.name }}-{{ .Values.labels.shortRegion }}
      app.kubernetes.io/part-of: blast
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: blast-{{ .Values.labels.name }}-{{ .Values.labels.shortRegion }}
        app.kubernetes.io/name: blast-{{ .Values.labels.name }}-{{ .Values.labels.shortRegion }}
        app.kubernetes.io/part-of: blast
        {{- if .Values.labels }}
{{ toYaml .Values.labels | indent 8 }}
        {{- end }}
    spec:
      securityContext: {}
      volumes:
        - name: blast-{{ .Values.labels.name }}-{{ .Values.labels.environment }}-cm
          configMap:
            name: blast-{{ .Values.labels.name }}-{{ .Values.labels.environment }}-cm
      containers:
      - name: blast-api-proxy
        image: {{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command: [ "/usr/bin/blast_proxy" ]
        args:
          - "0.0.0.0"
          - "8090"
          - "2"
          - "/root/config.toml"
        env:
          - name: BLAST_PROXY_METRICS_PORT
            value: "9090"
          - name: AWS_REGION
            value: "{{ .Values.sqsRegion }}"
          - name: AWS_ACCESS_KEY_ID
            value: "{{ .Values.AWSAccessKeyId }}"
          - name: AWS_SECRET_ACCESS_KEY
            value: "{{ .Values.AWSSecretAccessKey }}"
        volumeMounts:
          - name: blast-{{ .Values.labels.name }}-{{ .Values.labels.environment }}-cm
            mountPath: /root/config.toml
            subPath: config.toml
        ports:
          - name: metrics
            containerPort: 9090
            protocol: TCP
        readinessProbe:
          periodSeconds: 2
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
          httpGet:
            host:
            scheme: HTTP
            path: /healthz
            port: 8092
        livenessProbe:
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
          httpGet:
            host:
            scheme: HTTP
            path: /liveness
            port: 8092
      hostNetwork: {{ .Values.hostNetwork }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
